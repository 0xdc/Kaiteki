name: Build and deploy
env:
  SOURCE_PATH: './src/kaiteki'

on:
  workflow_dispatch

jobs:
  build-windows:
    name: Build for Windows
    runs-on: [self-hosted, windows, visual-studio, flutter-dev]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        
      - name: Enable Windows Desktop
        run: 'flutter config --enable-windows-desktop'

      - name: Get packages
        working-directory: ${{ env.SOURCE_PATH }}
        run: 'flutter pub get'

      - name: Build
        working-directory: ${{ env.SOURCE_PATH }}
        run: 'flutter build windows'
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: '${{ env.SOURCE_PATH }}/build/windows/release/*'
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: dev

      - name: Install Linux build requirements
        run: 'sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev'

      - name: Enable Linux Desktop
        run: 'flutter config --enable-linux-desktop'

      - name: Get packages
        working-directory: ${{ env.SOURCE_PATH }}
        run: 'flutter pub get'

      - name: Build
        working-directory: ${{ env.SOURCE_PATH }}
        run: 'flutter build linux'
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: '${{ env.SOURCE_PATH }}/build/linux/release/*'
  
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        
      - name: Get packages
        working-directory: ${{ env.SOURCE_PATH }}
        run: 'flutter pub get'

      - name: Build
        working-directory: ${{ env.SOURCE_PATH }}
        run: 'flutter build apk --split-per-abi'
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: '${{ env.SOURCE_PATH }}/build/app/outputs/apk/release/*.apk'

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build-linux, build-android, build-windows ]
    steps:
      - name: Download Android APKs
        uses: actions/download-artifact@v2
        if: ${{ needs.build-android.result == 'success' }}
        with:
          name: android
          path: ./release

      - name: Download Windows binaries
        uses: actions/download-artifact@v2
        if: ${{ needs.build-windows.result == 'success' }}
        with:
          name: windows
          path: ./release-windows
          
      - name: Repackage Windows artifacts
        uses: edgarrc/action-7z@v1.0.4
        if: ${{ needs.build-windows.result == 'success' }}
        with:
          args: 7z a ./windows.zip ./release-windows
        
      - name: Add repackaged artifacts to release directory
        if: ${{ needs.build-windows.result == 'success' }}
        run: mv ./windows.zip ./release
          
      - name: Download Linux binaries
        uses: actions/download-artifact@v2
        if: ${{ needs.build-linux.result == 'success' }}
        with:
          name: linux
          path: ./release-linux
      
      - name: Repackage Linux artifacts
        uses: edgarrc/action-7z@v1.0.4
        if: ${{ needs.build-linux.result == 'success' }}
        with:
          args: 7z a ./linux.zip ./release-linux
        
      - name: Add repackaged artifacts to release directory
        if: ${{ needs.build-linux.result == 'success' }}
        run: mv ./linux.zip ./release

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: Development build
          files: release/*
