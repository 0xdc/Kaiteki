name: Build & Deploy

env:
  SOURCE_PATH: './src/kaiteki'

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - '!src/kaiteki/storybook/**'
      - '!src/kaiteki/tools/**'
      - '!src/kaiteki/README.md'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.SOURCE_PATH }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
  
      - name: Get packages
        run: 'flutter pub get'

      - name: Analyze
        run: 'flutter analyze --no-pub --no-fatal-infos --no-congratulate --no-preamble'

      - name: Test
        run: 'flutter test --coverage -r expanded --no-pub'

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/lcov.info 

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ${{ env.SOURCE_PATH }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
        
      - name: Update Linux repos
        run: 'sudo apt-get update --fix-missing && sudo apt-get -y upgrade'

      - name: Install Linux build requirements
        run: 'sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev'

      - name: Enable Linux Desktop
        run: 'flutter config --enable-linux-desktop'

      - name: Get packages
        run: 'flutter pub get'

      - name: Build
        run: 'flutter build linux --release'
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: '${{ env.SOURCE_PATH }}/build/linux/x64/release/bundle/'
  package-appimage:
    name: Package (AppImage)
    runs-on: ubuntu-latest
    needs: build-linux
    if: github.event_name != 'pull_request'
    steps:
      - name: Install packaging dependencies
        run: 'sudo apt-get install -y python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse'

      - name: Download AppImageTool
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
          chmod +x appimagetool

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux
          path: 'kaiteki.AppDir'

      - name: Prepare directory
        run: |
          chmod +x kaiteki.AppDir/kaiteki
          wget https://raw.githubusercontent.com/Craftplacer/Kaiteki/master/assets/icons/windows/kaiteki.png -O kaiteki.AppDir/kaiteki.png
          wget https://raw.githubusercontent.com/Craftplacer/Kaiteki/master/assets/icons/windows/kaiteki.png -O kaiteki.AppDir/.DirIcon
          wget https://raw.githubusercontent.com/Craftplacer/Kaiteki/master/packaging/linux/kaiteki.desktop -O kaiteki.AppDir/kaiteki.desktop
          wget https://raw.githubusercontent.com/Craftplacer/Kaiteki/master/packaging/linux/AppRun -O kaiteki.AppDir/AppRun
          chmod +x kaiteki.AppDir/AppRun

      - name: Make AppImage
        run: |
          ./appimagetool --appimage-extract
          ./squashfs-root/AppRun kaiteki.AppDir/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: appimage
          path: 'Kaiteki-x86_64.AppImage'

  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ${{ env.SOURCE_PATH }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true

      - name: Get packages
        run: 'flutter pub get'

      - name: Dump signing key
        uses: timheuer/base64-to-file@v1.1
        if: github.event_name != 'pull_request'
        with:
          fileName: 'keystore.jks'
          fileDir: '${{ env.SOURCE_PATH }}/android/app/'
          encodedString: ${{ secrets.ANDROID_JKS }}

      - name: Build without release key
        if: github.event_name == 'pull_request'
        run: flutter build apk --build-number $(date +%s)

      - name: Build with release key
        if: github.event_name != 'pull_request'
        run: flutter build apk --build-number $(date +%s) --release
        env:
          STORE_PASSWORD: ${{ secrets.ANDROID_STORE }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: '${{ env.SOURCE_PATH }}/build/app/outputs/flutter-apk/app-release.apk'

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    needs: test
    defaults:
      run:
        working-directory: ${{ env.SOURCE_PATH }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
        
      - name: Enable Windows Desktop
        run: 'flutter config --enable-windows-desktop'

      - name: Get packages
        run: 'flutter pub get'

      - name: Build
        run: 'flutter build windows --release'
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: '${{ env.SOURCE_PATH }}/build/windows/runner/Release/'

  build-web:
    name: Build for Web
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ${{ env.SOURCE_PATH }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true

      - name: Enable web
        run: flutter config --enable-web
        
      - name: Get packages
        run: 'flutter pub get'
      
      - name: Build
        run: 'flutter build web --release'
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: '${{ env.SOURCE_PATH }}/build/web/*'
  deploy-web:
    name: Deploy for Web
    runs-on: ubuntu-latest
    needs: build-web
    if: github.event_name != 'pull_request'
    steps:
    - name: Download web artifact
      uses: actions/download-artifact@v2
      with:
        name: web
        path: ./web-publish

    - name: Push to GitHub Pages branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./web-publish
        cname: kaiteki.craftplacer.moe

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ "package-appimage", "build-android", "build-windows" ]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Zip multi-file artifacts
        run: |
          zip -r windows.zip windows
          zip -r linux.zip linux

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          files: |
            android/*.apk
            appimage/*.AppImage
            linux.zip
            windows.zip